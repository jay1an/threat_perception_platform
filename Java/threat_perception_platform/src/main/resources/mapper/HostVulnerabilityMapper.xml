<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tpp.threat_perception_platform.mapper.HostVulnerabilityMapper">

    <resultMap id="BaseResultMap" type="com.tpp.threat_perception_platform.pojo.HostVulnerability">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="mac" column="mac" jdbcType="VARCHAR"/>
            <result property="vulnerabilityId" column="vulnerability_id" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,mac,vulnerability_id,
        create_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from host_vulnerability
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <select id="selectByVulnerabilityId" resultType="com.tpp.threat_perception_platform.pojo.HostVulnerability">
        select
        <include refid="Base_Column_List" />
        from host_vulnerability
        where  vulnerability_id = #{vulnerabilityId,jdbcType=INTEGER}
    </select>
    <select id="selectAbnormalHosts" resultType="java.lang.String">
        select distinct mac from host_vulnerability
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select count(*) from host_vulnerability
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from host_vulnerability
        where  id = #{id,jdbcType=INTEGER} 
    </delete>

    <delete id="deleteByMac">
        delete from host_vulnerability
        where  mac = #{mac,jdbcType=VARCHAR}
    </delete>


    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.HostVulnerability" useGeneratedKeys="true">
        insert into host_vulnerability
        ( id,mac,vulnerability_id
        )
        values (#{id,jdbcType=INTEGER},#{mac,jdbcType=VARCHAR},#{vulnerabilityId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.HostVulnerability" useGeneratedKeys="true">
        insert into host_vulnerability
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="mac != null">mac,</if>
                <if test="vulnerabilityId != null">vulnerability_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="mac != null">#{mac,jdbcType=VARCHAR},</if>
                <if test="vulnerabilityId != null">#{vulnerabilityId,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <insert id="insertBatch">
        insert into host_vulnerability
        (mac,vulnerability_id)
        values
        <foreach collection="hostVulnerabilities" item="item" separator=",">
            (#{item.mac,jdbcType=VARCHAR},#{item.vulnerabilityId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.tpp.threat_perception_platform.pojo.HostVulnerability">
        update host_vulnerability
        <set>
                <if test="mac != null">
                    mac = #{mac,jdbcType=VARCHAR},
                </if>
                <if test="vulnerabilityId != null">
                    vulnerability_id = #{vulnerabilityId,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tpp.threat_perception_platform.pojo.HostVulnerability">
        update host_vulnerability
        set 
            mac =  #{mac,jdbcType=VARCHAR},
            vulnerability_id =  #{vulnerabilityId,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
